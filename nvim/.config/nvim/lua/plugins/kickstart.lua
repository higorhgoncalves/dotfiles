return {
	{
		"mbbill/undotree",
		config = function()
			vim.keymap.set("n", "<leader>du", ":UndotreeToggle<CR>:UndotreeFocus<CR>", { desc = "Toggle undotree" })
		end,
	},
	-- { -- Add indentation guides even on blank lines
	-- 	"lukas-reineke/indent-blankline.nvim",
	-- 	-- Enable `lukas-reineke/indent-blankline.nvim`
	-- 	-- See `:help ibl`
	-- 	main = "ibl",
	-- 	opts = {
	-- 		exclude = {
	-- 			filetypes = {
	-- 				"dashboard",
	-- 				"alpha",
	-- 				"ministarter",
	-- 				"snacks_dashboard",
	-- 			},
	-- 		},
	-- 		indent = { char = "▏" },
	-- 		whitespace = { highlight = { "Whitespace" } },
	-- 		scope = { enabled = false },
	-- 	},
	-- },
	-- {
	-- 	"HiPhish/rainbow-delimiters.nvim",
	-- 	dependencies = {
	-- 		"lukas-reineke/indent-blankline.nvim",
	-- 	},
	-- 	config = function()
	-- 		local highlight = {
	-- 			"RainbowRed",
	-- 			"RainbowYellow",
	-- 			"RainbowBlue",
	-- 			"RainbowOrange",
	-- 			"RainbowGreen",
	-- 			"RainbowViolet",
	-- 			"RainbowCyan",
	-- 		}
	-- 		local hooks = require("ibl.hooks")
	-- 		-- create the highlight groups in the highlight setup hook, so they are reset
	-- 		-- every time the colorscheme changes
	-- 		hooks.register(hooks.type.HIGHLIGHT_SETUP, function()
	-- 			vim.api.nvim_set_hl(0, "RainbowRed", { fg = "#E06C75" })
	-- 			vim.api.nvim_set_hl(0, "RainbowYellow", { fg = "#E5C07B" })
	-- 			vim.api.nvim_set_hl(0, "RainbowBlue", { fg = "#61AFEF" })
	-- 			vim.api.nvim_set_hl(0, "RainbowOrange", { fg = "#D19A66" })
	-- 			vim.api.nvim_set_hl(0, "RainbowGreen", { fg = "#98C379" })
	-- 			vim.api.nvim_set_hl(0, "RainbowViolet", { fg = "#C678DD" })
	-- 			vim.api.nvim_set_hl(0, "RainbowCyan", { fg = "#56B6C2" })
	-- 		end)
	--
	-- 		vim.g.rainbow_delimiters = { highlight = highlight }
	-- 		require("ibl").setup({
	-- 			exclude = {
	-- 				filetypes = {
	-- 					"dashboard",
	-- 					"alpha",
	-- 					"ministarter",
	-- 					"snacks_dashboard",
	-- 				},
	-- 			},
	-- 			indent = {
	-- 				-- char = "│",
	-- 				char = "▏",
	-- 			},
	-- 			whitespace = { highlight = { "Whitespace" } },
	-- 			-- scope = { enabled = false },
	-- 			scope = {
	-- 				exclude = {
	-- 					language = {
	-- 						"lua",
	-- 						-- "php",
	-- 					},
	-- 				},
	-- 				highlight = highlight,
	-- 			},
	-- 		})
	--
	-- 		hooks.register(hooks.type.SCOPE_HIGHLIGHT, hooks.builtin.scope_highlight_from_extmark)
	-- 	end,
	-- },
}
